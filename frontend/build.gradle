//plugins {
//  id 'java'
//  id 'application'
//  id 'com.google.protobuf' version '0.9.4'
////  id 'org.javamodularity.moduleplugin' version '1.8.12'
//  id 'org.openjfx.javafxplugin' version '0.1.0'
//  id 'org.beryx.jlink' version '2.25.0'
//}
//
//group 'org.example'
//version '1.0-SNAPSHOT'
//
//repositories {
//  mavenCentral()
//}
//
//ext {
//  grpcVersion = '1.63.0'
//  protobufVersion = '3.25.3'
//  junitVersion = '5.10.2'
//}
//
//sourceCompatibility = '21'
//targetCompatibility = '21'
//
//tasks.withType(JavaCompile) {
//  options.encoding = 'UTF-8'
//}
//
//application {
//  mainModule = 'org.example.frontend'
//  mainClass = 'org.example.frontend.HelloApplication'
//}
//
//javafx {
//  version = '21'
//  modules = ['javafx.controls', 'javafx.fxml']
//}
//
//dependencies {
//
//  implementation 'ch.qos.logback:logback-classic:1.2.11'
//
//
//  implementation 'io.grpc:grpc-context:1.63.0'
//
//  implementation "io.grpc:grpc-netty:${grpcVersion}"
//  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
//  implementation "io.grpc:grpc-stub:${grpcVersion}"
////  // исключите jsr305 из зависимостей gRPC
////  implementation("io.grpc:grpc-protobuf:${grpcVersion}") {
////    exclude group: 'com.google.code.findbugs', module: 'jsr305'
////  }
////  implementation("io.grpc:grpc-stub:${grpcVersion}") {
////    exclude group: 'com.google.code.findbugs', module: 'jsr305'
////  }
////  implementation("io.grpc:grpc-netty:${grpcVersion}") {
////    exclude group: 'com.google.code.findbugs', module: 'jsr305'
////  }
//  implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
//
//  implementation('org.controlsfx:controlsfx:11.2.1')
//  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
//    exclude(group: 'org.openjfx')
//  }
//  implementation('net.synedra:validatorfx:0.5.0') {
//    exclude(group: 'org.openjfx')
//  }
//  implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
//  implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
//
//  compileOnly("org.projectlombok:lombok:1.18.30")
//  annotationProcessor("org.projectlombok:lombok:1.18.30")
//
//  implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
//  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'
//
//  implementation 'org.ow2.asm:asm:9.6' // Основная библиотека ASM
//  implementation 'org.ow2.asm:asm-commons:9.6' // Дополнительные модули (если нужны)
//
//
//  compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
//  compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
//
//  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
//  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
//}
//
//
//protobuf {
//  protoc {
//    artifact = "com.google.protobuf:protoc:${protobufVersion}"
//  }
//  plugins {
//    grpc {
//      artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
//    }
//  }
//  generateProtoTasks {
//    all().each { task ->
//      task.plugins {
//        grpc {}
//      }
//    }
//  }
//}
//
//
//sourceSets {
//  main {
//    proto {
//      srcDir 'src/main/proto'
//    }
//    java {
//      srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpc"
//      srcDirs += "${protobuf.generatedFilesBaseDir}/main/java"
//    }
//  }
//}
//
//test {
//useJUnitPlatform()}
//
//jlink {
//  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
//  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
//  launcher {
//    name = 'app'
//  }
//}
//
//jlinkZip {
//  group = 'distribution'
//}

plugins {
  id 'java'
  id 'application'
  id 'com.google.protobuf' version '0.9.4'
  id 'org.openjfx.javafxplugin' version '0.1.0'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  grpcVersion     = '1.63.0'
  protobufVersion = '3.25.3'
  junitVersion    = '5.10.2'
}

sourceCompatibility = '21'
targetCompatibility = '21'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

// Добавляем стратегию обработки дубликатов
tasks.processResources {
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

application {
  mainClass = 'org.example.frontend.ChatClientApp'
}

javafx {
  version = '21'
  modules = [ 'javafx.controls', 'javafx.fxml' ]
}

dependencies {
  implementation 'ch.qos.logback:logback-classic:1.2.11'

  implementation 'io.grpc:grpc-context:1.63.0'
  implementation "io.grpc:grpc-netty:${grpcVersion}"
  implementation "io.grpc:grpc-protobuf:${grpcVersion}"
  implementation "io.grpc:grpc-stub:${grpcVersion}"
  implementation "com.google.protobuf:protobuf-java:${protobufVersion}"

  implementation 'org.controlsfx:controlsfx:11.2.1'
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') { exclude group: 'org.openjfx' }
  implementation('net.synedra:validatorfx:0.5.0')   { exclude group: 'org.openjfx' }
  implementation 'org.kordamp.ikonli:ikonli-javafx:12.3.1'
  implementation 'org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0'

  compileOnly 'org.projectlombok:lombok:1.18.30'
  annotationProcessor 'org.projectlombok:lombok:1.18.30'

  implementation 'com.fasterxml.jackson.core:jackson-core:2.14.2'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.2'

  implementation 'org.ow2.asm:asm:9.6'
  implementation 'org.ow2.asm:asm-commons:9.6'

  compileOnly 'javax.annotation:javax.annotation-api:1.3.2'

  testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

protobuf {
  protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
  }
  generateProtoTasks {
    all().each { task ->
      task.plugins { grpc {} }
    }
  }
}

sourceSets {
  main {
    proto { srcDir 'src/main/proto' }
    java {
      srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpc"
      srcDirs += "${protobuf.generatedFilesBaseDir}/main/java"
    }
  }
}

test {
  useJUnitPlatform()
}

jlink {
  imageZip = file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options  = ['--strip-debug','--compress','2','--no-header-files','--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

